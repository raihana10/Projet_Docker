name: Laravel Docker CI
on:
  push:
    branches: ['*']
  pull_request:
    branches: [main]
  pull_request_target:
    types: [closed]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Placeholder step
        run: echo "Build and test steps would go here"

  update-jira-status:
    needs: build-and-test
    if: github.event_name == 'pull_request_target' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-latest
    steps:
      - name: Debug Event
        run: |
          echo "Event details:"
          echo "Action: ${{ github.event.action }}"
          echo "Merged: ${{ github.event.pull_request.merged }}"
          echo "Base Ref: ${{ github.event.pull_request.base.ref }}"

      - name: Extract Jira Issue Key
        id: extract_jira_key
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_BRANCH="${{ github.event.pull_request.head.ref }}"
          
          JIRA_KEY=$(echo "$PR_TITLE" | grep -oE '[A-Z]+-[0-9]+' | head -1)
          [ -z "$JIRA_KEY" ] && JIRA_KEY=$(echo "$PR_BRANCH" | grep -oE '[A-Z]+-[0-9]+' | head -1)
          
          if [ -n "$JIRA_KEY" ]; then
            echo "Found Jira key: $JIRA_KEY"
            echo "jira_key=$JIRA_KEY" >> $GITHUB_OUTPUT
          else
            echo "No Jira key found"
            echo "jira_key=" >> $GITHUB_OUTPUT
          fi

      - name: Verify Jira Configuration
        run: |
          echo "JIRA_URL: ${{ secrets.JIRA_URL }}"
          if [[ ! "${{ secrets.JIRA_URL }}" =~ ^https:// ]]; then
            echo "::error::JIRA_URL doit commencer par https://"
            exit 1
          fi
          echo "Configuration valide"

      - name: Setup Jira Config
        if: steps.extract_jira_key.outputs.jira_key != ''
        run: |
          mkdir -p /home/runner/jira
          cat <<EOF > /home/runner/jira/config.yml
          baseUrl: ${{ secrets.JIRA_URL }}
          email: ${{ secrets.JIRA_USER }}
          apiToken: ${{ secrets.JIRA_TOKEN }}
          EOF
          echo "Fichier config créé:"
          cat /home/runner/jira/config.yml | grep -v 'apiToken:'

      - name: Get Transition ID
        id: get_transition
        if: steps.extract_jira_key.outputs.jira_key != ''
        run: |
          RESPONSE=$(curl -s -u "${{ secrets.JIRA_USER }}:${{ secrets.JIRA_TOKEN }}" \
            "${{ secrets.JIRA_URL }}/rest/api/2/issue/${{ steps.extract_jira_key.outputs.jira_key }}/transitions")
          echo "API Response: $RESPONSE"
          TERMINATED_ID=$(echo "$RESPONSE" | jq -r '.transitions[] | select(.name == "TERMINÉ(E)") | .id')
          if [ -n "$TERMINATED_ID" ]; then
            echo "transitionId=$TERMINATED_ID" >> $GITHUB_OUTPUT
          else
            echo "::error::Transition 'TERMINÉ(E)' non trouvée"
            exit 1
          fi

      - name: Transition Jira Issue
        if: steps.extract_jira_key.outputs.jira_key != '' && steps.get_transition.outputs.transitionId != ''
        uses: atlassian/gajira-transition@v3
        with:
          issue: ${{ steps.extract_jira_key.outputs.jira_key }}
          transitionId: ${{ steps.get_transition.outputs.transitionId }}