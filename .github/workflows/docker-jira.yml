name: Laravel Docker CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  pull_request_target:
    types: [closed]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Debug directory structure
        run: |
          echo "Current working directory: $(pwd)"
          echo "Directory contents:"
          ls -la
          echo "Looking for .env.example in subdirectories:"
          find . -name ".env.example" -type f
      
      - name: Copy .env.example to .env
        run: |
          ENV_EXAMPLE=$(find . -name ".env.example" -type f | head -n 1)
          if [ -n "$ENV_EXAMPLE" ]; then
            echo "Found .env.example at: $ENV_EXAMPLE"
            cp "$ENV_EXAMPLE" ./.env
            echo ".env created successfully"
            cat ./.env | head -5
          else
            echo "ERROR: Could not find .env.example file"
            exit 1
          fi
        
      - name: Placeholder step
        run: echo "Build and test steps would go here"

  update-jira-status:
    needs: build-and-test
    if: |
      (github.event_name == 'pull_request_target' && github.event.pull_request.merged == true) ||
      (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    steps:
      - name: Extract Jira Issue Key
        id: extract_jira_key
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_BODY="${{ github.event.pull_request.body }}"
          echo "Checking PR title: $PR_TITLE"
          echo "Checking PR body: $PR_BODY"
          
          # Look for Jira ticket pattern in PR title (e.g., PROJECT-123)
          JIRA_KEY=$(echo "$PR_TITLE" | grep -oE '[A-Z]+-[0-9]+' | head -1)
          
          # If not found in title, look in PR description
          if [ -z "$JIRA_KEY" ]; then
            JIRA_KEY=$(echo "$PR_BODY" | grep -oE '[A-Z]+-[0-9]+' | head -1)
          fi
          
          if [ -n "$JIRA_KEY" ]; then
            echo "Found Jira ticket: $JIRA_KEY"
            echo "jira_key=$JIRA_KEY" >> $GITHUB_OUTPUT
          else
            echo "No Jira ticket found"
            echo "jira_key=" >> $GITHUB_OUTPUT
            exit 0 # Exit gracefully if no Jira key found
          fi
      
      - name: Debug - Event Info
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "PR merged: ${{ github.event.pull_request.merged }}"
          echo "Jira key: ${{ steps.extract_jira_key.outputs.jira_key }}"
      
      - name: Transition Jira Issue
        if: steps.extract_jira_key.outputs.jira_key != ''
        uses: atlassian/gajira-transition@v3
        with:
          issue: ${{ steps.extract_jira_key.outputs.jira_key }}
          transition: "Done"
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}